# -*- coding: utf-8 -*- ############################################################################# Python code generated with wxFormBuilder (version Sep 12 2010)## http://www.wxformbuilder.org/#### PLEASE DO "NOT" EDIT THIS FILE!###########################################################################import wx############################################################################# Class CanonicalCorrelationAnalysisLayout###########################################################################class CanonicalCorrelationAnalysisLayout ( wx.Frame ):		def __init__( self, parent ):		wx.Frame.__init__ ( self, parent, id = wx.ID_ANY, title = u"Canonical Correlation Analysis", pos = wx.DefaultPosition, size = wx.Size( 836,550 ), style = wx.CAPTION|wx.CLOSE_BOX|wx.SYSTEM_MENU|wx.TAB_TRAVERSAL )				self.SetSizeHintsSz( wx.Size( 836,550 ), wx.Size( 836,550 ) )		self.SetBackgroundColour( wx.SystemSettings.GetColour( wx.SYS_COLOUR_BTNFACE ) )				bSizer9 = wx.BoxSizer( wx.VERTICAL )				bSizer9.SetMinSize( wx.Size( 836,550 ) ) 		self.m_panel1 = wx.Panel( self, wx.ID_ANY, wx.DefaultPosition, wx.Size( 830,550 ), wx.TAB_TRAVERSAL )		self.m_panel1.SetMaxSize( wx.Size( 830,550 ) )				fgSizer7 = wx.FlexGridSizer( 2, 1, 0, 0 )		fgSizer7.AddGrowableRow( 1 )		fgSizer7.SetFlexibleDirection( wx.VERTICAL )		fgSizer7.SetNonFlexibleGrowMode( wx.FLEX_GROWMODE_SPECIFIED )				bSizer7 = wx.BoxSizer( wx.HORIZONTAL )				bSizer7.SetMinSize( wx.Size( 816,210 ) ) 		szrLocation = wx.StaticBoxSizer( wx.StaticBox( self.m_panel1, wx.ID_ANY, u"Location" ), wx.HORIZONTAL )				bSizer8 = wx.BoxSizer( wx.VERTICAL )				self.m_staticText2 = wx.StaticText( self.m_panel1, wx.ID_ANY, u"Not Included", wx.DefaultPosition, wx.DefaultSize, 0 )		self.m_staticText2.Wrap( -1 )		bSizer8.Add( self.m_staticText2, 0, wx.LEFT, 8 )				lstNotIncludedChoices = []		self.lstNotIncluded = wx.ListBox( self.m_panel1, wx.ID_ANY, wx.DefaultPosition, wx.DefaultSize, lstNotIncludedChoices, wx.LB_EXTENDED )		bSizer8.Add( self.lstNotIncluded, 1, wx.EXPAND|wx.LEFT|wx.RIGHT, 5 )				szrLocation.Add( bSizer8, 1, wx.EXPAND, 5 )				bSizer4 = wx.BoxSizer( wx.VERTICAL )				self.btnAdd = wx.Button( self.m_panel1, wx.ID_ANY, u"Add >>", wx.DefaultPosition, wx.DefaultSize, 0 )		self.btnAdd.Enable( False )				bSizer4.Add( self.btnAdd, 0, wx.ALIGN_CENTER|wx.TOP, 42 )				self.btnRemove = wx.Button( self.m_panel1, wx.ID_ANY, u"<< Remove", wx.DefaultPosition, wx.DefaultSize, 0 )		self.btnRemove.Enable( False )				bSizer4.Add( self.btnRemove, 0, wx.ALIGN_CENTER|wx.TOP, 15 )				szrLocation.Add( bSizer4, 0, wx.LEFT|wx.RIGHT, 5 )				bSizer5 = wx.BoxSizer( wx.VERTICAL )				self.m_staticText3 = wx.StaticText( self.m_panel1, wx.ID_ANY, u"Included", wx.DefaultPosition, wx.DefaultSize, 0 )		self.m_staticText3.Wrap( -1 )		bSizer5.Add( self.m_staticText3, 0, wx.LEFT, 8 )				lstIncludedChoices = []		self.lstIncluded = wx.ListBox( self.m_panel1, wx.ID_ANY, wx.DefaultPosition, wx.DefaultSize, lstIncludedChoices, wx.LB_EXTENDED )		bSizer5.Add( self.lstIncluded, 1, wx.EXPAND|wx.LEFT|wx.RIGHT, 5 )				szrLocation.Add( bSizer5, 1, wx.EXPAND, 5 )				bSizer7.Add( szrLocation, 1, wx.ALL|wx.EXPAND, 5 )				szrLocation1 = wx.StaticBoxSizer( wx.StaticBox( self.m_panel1, wx.ID_ANY, u"Sequence" ), wx.HORIZONTAL )				fgSizer2 = wx.FlexGridSizer( 2, 2, 0, 0 )		fgSizer2.SetFlexibleDirection( wx.BOTH )		fgSizer2.SetNonFlexibleGrowMode( wx.FLEX_GROWMODE_SPECIFIED )				self.m_staticText1 = wx.StaticText( self.m_panel1, wx.ID_ANY, u"Count Field", wx.DefaultPosition, wx.DefaultSize, 0 )		self.m_staticText1.Wrap( -1 )		fgSizer2.Add( self.m_staticText1, 1, wx.ALIGN_CENTER_VERTICAL|wx.ALIGN_LEFT|wx.LEFT, 5 )				chcCountFieldChoices = []		self.chcCountField = wx.Choice( self.m_panel1, wx.ID_ANY, wx.DefaultPosition, wx.DefaultSize, chcCountFieldChoices, 0 )		self.chcCountField.SetSelection( 0 )		fgSizer2.Add( self.chcCountField, 0, wx.ALIGN_LEFT|wx.ALL|wx.EXPAND, 5 )				self.m_staticText5 = wx.StaticText( self.m_panel1, wx.ID_ANY, u"Field to use", wx.DefaultPosition, wx.DefaultSize, 0 )		self.m_staticText5.Wrap( -1 )		fgSizer2.Add( self.m_staticText5, 1, wx.ALIGN_CENTER_VERTICAL|wx.ALIGN_LEFT|wx.LEFT, 5 )				chcFieldToUseChoices = []		self.chcFieldToUse = wx.Choice( self.m_panel1, wx.ID_ANY, wx.DefaultPosition, wx.DefaultSize, chcFieldToUseChoices, 0 )		self.chcFieldToUse.SetSelection( 0 )		fgSizer2.Add( self.chcFieldToUse, 0, wx.ALIGN_LEFT|wx.ALL|wx.EXPAND, 5 )				szrLocation1.Add( fgSizer2, 1, wx.EXPAND, 5 )				bSizer7.Add( szrLocation1, 0, wx.ALL|wx.EXPAND, 5 )				fgSizer7.Add( bSizer7, 1, wx.LEFT|wx.RIGHT, 5 )				fgSizer1 = wx.FlexGridSizer( 1, 6, 0, 0 )		fgSizer1.AddGrowableCol( 1 )		fgSizer1.AddGrowableCol( 4 )		fgSizer1.SetFlexibleDirection( wx.HORIZONTAL )		fgSizer1.SetNonFlexibleGrowMode( wx.FLEX_GROWMODE_SPECIFIED )				sbSizer51 = wx.StaticBoxSizer( wx.StaticBox( self.m_panel1, wx.ID_ANY, u"Operation to Perform" ), wx.VERTICAL )				self.operationMatrixCorrelation = wx.RadioButton( self.m_panel1, wx.ID_ANY, u"Matrix Correlation", wx.Point( -1,-1 ), wx.DefaultSize, 0 )		self.operationMatrixCorrelation.SetValue( True ) 		sbSizer51.Add( self.operationMatrixCorrelation, 0, 0, 15 )				self.operationGridSearch = wx.RadioButton( self.m_panel1, wx.ID_ANY, u"Grid Search", wx.DefaultPosition, wx.DefaultSize, 0 )		sbSizer51.Add( self.operationGridSearch, 0, wx.TOP, 12 )				self.operationCCA = wx.RadioButton( self.m_panel1, wx.ID_ANY, u"CCA", wx.DefaultPosition, wx.DefaultSize, 0 )		sbSizer51.Add( self.operationCCA, 0, wx.TOP, 12 )				self.operationPEN = wx.RadioButton( self.m_panel1, wx.ID_ANY, u"PEN", wx.DefaultPosition, wx.DefaultSize, 0 )		self.operationPEN.Enable( False )				sbSizer51.Add( self.operationPEN, 0, wx.TOP, 12 )				fgSizer1.Add( sbSizer51, 1, wx.ALL|wx.EXPAND, 5 )						fgSizer1.AddSpacer( ( 0, 0), 1, wx.EXPAND, 5 )				fgSizer4 = wx.FlexGridSizer( 5, 1, 0, 0 )		fgSizer4.SetFlexibleDirection( wx.BOTH )		fgSizer4.SetNonFlexibleGrowMode( wx.FLEX_GROWMODE_SPECIFIED )				bSizer11 = wx.BoxSizer( wx.VERTICAL )				bSizer91 = wx.BoxSizer( wx.VERTICAL )				self.maximumSearch = wx.StaticText( self.m_panel1, wx.ID_ANY, u"Maximum Search", wx.DefaultPosition, wx.DefaultSize, 0 )		self.maximumSearch.Wrap( -1 )		self.maximumSearch.Enable( False )				bSizer91.Add( self.maximumSearch, 1, wx.ALIGN_RIGHT|wx.TOP, 12 )				self.minimumSearch = wx.StaticText( self.m_panel1, wx.ID_ANY, u"Minimum Search", wx.DefaultPosition, wx.DefaultSize, 0 )		self.minimumSearch.Wrap( -1 )		self.minimumSearch.Enable( False )				bSizer91.Add( self.minimumSearch, 1, wx.ALIGN_RIGHT|wx.TOP, 13 )				self.numOfBlocks = wx.StaticText( self.m_panel1, wx.ID_ANY, u"# of Blocks", wx.DefaultPosition, wx.DefaultSize, 0 )		self.numOfBlocks.Wrap( -1 )		self.numOfBlocks.Enable( False )				bSizer91.Add( self.numOfBlocks, 1, wx.ALIGN_RIGHT|wx.TOP, 14 )				self.RCCATxt = wx.StaticText( self.m_panel1, wx.ID_ANY, u"RCCA Lambdas", wx.DefaultPosition, wx.DefaultSize, 0 )		self.RCCATxt.Wrap( -1 )		self.RCCATxt.Enable( False )				bSizer91.Add( self.RCCATxt, 0, wx.ALIGN_RIGHT|wx.TOP, 64 )				self.PENTxt = wx.StaticText( self.m_panel1, wx.ID_ANY, u"PEN Parameters", wx.DefaultPosition, wx.DefaultSize, 0 )		self.PENTxt.Wrap( -1 )		self.PENTxt.Enable( False )				bSizer91.Add( self.PENTxt, 0, wx.ALIGN_RIGHT|wx.TOP, 66 )				bSizer11.Add( bSizer91, 1, wx.ALL|wx.EXPAND, 5 )				fgSizer4.Add( bSizer11, 1, wx.EXPAND|wx.TOP, 25 )				fgSizer1.Add( fgSizer4, 1, wx.ALIGN_RIGHT, 5 )				bSizer121 = wx.BoxSizer( wx.VERTICAL )				gbSizer1 = wx.GridBagSizer( 0, 0 )		gbSizer1.SetFlexibleDirection( wx.VERTICAL )		gbSizer1.SetNonFlexibleGrowMode( wx.FLEX_GROWMODE_NONE )				sbSizer3 = wx.StaticBoxSizer( wx.StaticBox( self.m_panel1, wx.ID_ANY, u"Location (λ1)" ), wx.VERTICAL )				self.txtMinLoc = wx.TextCtrl( self.m_panel1, wx.ID_ANY, u"0.0001", wx.DefaultPosition, wx.DefaultSize, wx.TE_RICH|wx.TAB_TRAVERSAL )		self.txtMinLoc.SetForegroundColour( wx.Colour( 204, 204, 204 ) )		self.txtMinLoc.Enable( False )				sbSizer3.Add( self.txtMinLoc, 1, wx.ALL|wx.EXPAND, 5 )				self.txtMaxLoc = wx.TextCtrl( self.m_panel1, wx.ID_ANY, u"0.2", wx.DefaultPosition, wx.DefaultSize, wx.TE_RICH|wx.TAB_TRAVERSAL )		self.txtMaxLoc.SetForegroundColour( wx.Colour( 204, 204, 204 ) )		self.txtMaxLoc.Enable( False )				sbSizer3.Add( self.txtMaxLoc, 0, wx.ALL, 5 )				self.txtCutsLoc = wx.TextCtrl( self.m_panel1, wx.ID_ANY, u"5", wx.DefaultPosition, wx.DefaultSize, wx.TE_RICH|wx.TAB_TRAVERSAL )		self.txtCutsLoc.SetForegroundColour( wx.Colour( 204, 204, 204 ) )		self.txtCutsLoc.Enable( False )				sbSizer3.Add( self.txtCutsLoc, 0, wx.ALL, 5 )				gbSizer1.Add( sbSizer3, wx.GBPosition( 0, 0 ), wx.GBSpan( 1, 1 ), wx.ALL|wx.EXPAND, 5 )				sbSizer5 = wx.StaticBoxSizer( wx.StaticBox( self.m_panel1, wx.ID_ANY, u"Sequence (λ2)" ), wx.VERTICAL )				self.txtMinSeq = wx.TextCtrl( self.m_panel1, wx.ID_ANY, u"0.0001", wx.DefaultPosition, wx.DefaultSize, wx.TE_RICH|wx.TAB_TRAVERSAL )		self.txtMinSeq.SetForegroundColour( wx.Colour( 204, 204, 204 ) )		self.txtMinSeq.Enable( False )				sbSizer5.Add( self.txtMinSeq, 0, wx.ALL, 5 )				self.txtMaxSeq = wx.TextCtrl( self.m_panel1, wx.ID_ANY, u"0.2", wx.DefaultPosition, wx.DefaultSize, wx.TE_RICH|wx.TAB_TRAVERSAL )		self.txtMaxSeq.SetForegroundColour( wx.Colour( 204, 204, 204 ) )		self.txtMaxSeq.Enable( False )				sbSizer5.Add( self.txtMaxSeq, 0, wx.ALL, 5 )				self.txtCutsSeq = wx.TextCtrl( self.m_panel1, wx.ID_ANY, u"5", wx.DefaultPosition, wx.DefaultSize, wx.TE_RICH|wx.TAB_TRAVERSAL )		self.txtCutsSeq.SetForegroundColour( wx.Colour( 204, 204, 204 ) )		self.txtCutsSeq.Enable( False )				sbSizer5.Add( self.txtCutsSeq, 0, wx.ALL, 5 )				gbSizer1.Add( sbSizer5, wx.GBPosition( 0, 1 ), wx.GBSpan( 1, 1 ), wx.ALL|wx.EXPAND, 5 )				sbSizer6 = wx.StaticBoxSizer( wx.StaticBox( self.m_panel1, wx.ID_ANY, u"Location (λ1)" ), wx.VERTICAL )				self.manualL1 = wx.TextCtrl( self.m_panel1, wx.ID_ANY, wx.EmptyString, wx.DefaultPosition, wx.DefaultSize, wx.TE_RICH )		self.manualL1.SetForegroundColour( wx.Colour( 204, 204, 204 ) )		self.manualL1.Enable( False )				sbSizer6.Add( self.manualL1, 0, wx.ALL, 5 )				gbSizer1.Add( sbSizer6, wx.GBPosition( 1, 0 ), wx.GBSpan( 1, 1 ), wx.ALL|wx.EXPAND, 5 )				sbSizer7 = wx.StaticBoxSizer( wx.StaticBox( self.m_panel1, wx.ID_ANY, u"Sequence (λ2)" ), wx.VERTICAL )				self.manualL2 = wx.TextCtrl( self.m_panel1, wx.ID_ANY, wx.EmptyString, wx.DefaultPosition, wx.DefaultSize, wx.TE_RICH )		self.manualL2.SetForegroundColour( wx.Colour( 204, 204, 204 ) )		self.manualL2.Enable( False )				sbSizer7.Add( self.manualL2, 0, wx.ALL, 5 )				gbSizer1.Add( sbSizer7, wx.GBPosition( 1, 1 ), wx.GBSpan( 1, 1 ), wx.ALL|wx.EXPAND, 5 )				sbSizer12 = wx.StaticBoxSizer( wx.StaticBox( self.m_panel1, wx.ID_ANY, u"Threshold" ), wx.VERTICAL )				bSizer111 = wx.BoxSizer( wx.HORIZONTAL )				self.thresholdZero = wx.StaticText( self.m_panel1, wx.ID_ANY, u"0.", wx.DefaultPosition, wx.DefaultSize, 0 )		self.thresholdZero.Wrap( -1 )		self.thresholdZero.Enable( False )				bSizer111.Add( self.thresholdZero, 0, wx.ALIGN_CENTER_VERTICAL, 5 )				bSizer112 = wx.BoxSizer( wx.VERTICAL )				self.threshold = wx.SpinCtrl( self.m_panel1, wx.ID_ANY, u"500", wx.DefaultPosition, wx.DefaultSize, wx.SP_ARROW_KEYS, 0, 999, 500 )		self.threshold.SetForegroundColour( wx.Colour( 204, 204, 204 ) )		self.threshold.Enable( False )				bSizer112.Add( self.threshold, 0, wx.EXPAND, 0 )				bSizer111.Add( bSizer112, 1, wx.ALIGN_CENTER_VERTICAL, 5 )				sbSizer12.Add( bSizer111, 1, wx.EXPAND, 5 )				gbSizer1.Add( sbSizer12, wx.GBPosition( 2, 0 ), wx.GBSpan( 1, 1 ), wx.ALL|wx.EXPAND, 5 )				sbSizer9 = wx.StaticBoxSizer( wx.StaticBox( self.m_panel1, wx.ID_ANY, u"Dimensions" ), wx.VERTICAL )				self.dimensions = wx.SpinCtrl( self.m_panel1, wx.ID_ANY, u"1", wx.DefaultPosition, wx.DefaultSize, wx.SP_ARROW_KEYS, 1, 10, 1 )		self.dimensions.Enable( False )				sbSizer9.Add( self.dimensions, 0, wx.ALL|wx.EXPAND, 5 )				gbSizer1.Add( sbSizer9, wx.GBPosition( 2, 1 ), wx.GBSpan( 1, 1 ), wx.ALL|wx.EXPAND, 5 )				bSizer121.Add( gbSizer1, 1, wx.EXPAND, 5 )				fgSizer1.Add( bSizer121, 1, wx.EXPAND, 5 )						fgSizer1.AddSpacer( ( 0, 0), 1, wx.EXPAND, 5 )				bSizer13 = wx.BoxSizer( wx.VERTICAL )				bSizer13.SetMinSize( wx.Size( 163,-1 ) ) 		self.btnExport = wx.Button( self.m_panel1, wx.ID_ANY, u"Export to Cytoscape", wx.DefaultPosition, wx.DefaultSize, 0 )		self.btnExport.Enable( False )				bSizer13.Add( self.btnExport, 0, wx.ALIGN_RIGHT|wx.ALL, 5 )				self.btnGo = wx.Button( self.m_panel1, wx.ID_ANY, u"Go", wx.DefaultPosition, wx.DefaultSize, 0 )		bSizer13.Add( self.btnGo, 0, wx.ALL|wx.ALIGN_RIGHT|wx.ALIGN_BOTTOM, 5 )				fgSizer1.Add( bSizer13, 0, wx.ALIGN_BOTTOM|wx.ALIGN_RIGHT|wx.BOTTOM, 5 )				fgSizer7.Add( fgSizer1, 1, wx.EXPAND|wx.LEFT|wx.RIGHT, 5 )				self.m_panel1.SetSizer( fgSizer7 )		self.m_panel1.Layout()		bSizer9.Add( self.m_panel1, 1, wx.ALL|wx.EXPAND, 5 )				self.SetSizer( bSizer9 )		self.Layout()				self.Centre( wx.BOTH )				# Connect Events		self.Bind( wx.EVT_SIZE, self.OnSize )		self.lstNotIncluded.Bind( wx.EVT_LISTBOX, self.OnNotIncludedClick )		self.btnAdd.Bind( wx.EVT_BUTTON, self.OnAdd )		self.btnRemove.Bind( wx.EVT_BUTTON, self.OnRemove )		self.lstIncluded.Bind( wx.EVT_LISTBOX, self.OnIncludedClick )		self.chcFieldToUse.Bind( wx.EVT_CHOICE, self.OnChooseSequenceField )		self.operationMatrixCorrelation.Bind( wx.EVT_RADIOBUTTON, self.OnChooseMatrixCorrelation )		self.operationGridSearch.Bind( wx.EVT_RADIOBUTTON, self.OnChooseGridSearch )		self.operationCCA.Bind( wx.EVT_RADIOBUTTON, self.OnChooseCCA )		self.operationPEN.Bind( wx.EVT_RADIOBUTTON, self.OnChoosePEN )		self.btnExport.Bind( wx.EVT_BUTTON, self.OnExportPEN )		self.btnGo.Bind( wx.EVT_BUTTON, self.OnGo )		def __del__( self ):		pass			# Virtual event handlers, overide them in your derived class	def OnSize( self, event ):		event.Skip()		def OnNotIncludedClick( self, event ):		event.Skip()		def OnAdd( self, event ):		event.Skip()		def OnRemove( self, event ):		event.Skip()		def OnIncludedClick( self, event ):		event.Skip()		def OnChooseSequenceField( self, event ):		event.Skip()		def OnChooseMatrixCorrelation( self, event ):		event.Skip()		def OnChooseGridSearch( self, event ):		event.Skip()		def OnChooseCCA( self, event ):		event.Skip()		def OnChoosePEN( self, event ):		event.Skip()		def OnExportPEN( self, event ):		event.Skip()		def OnGo( self, event ):		event.Skip()	